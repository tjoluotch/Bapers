/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Controllers.BAPREPT;
import java.awt.print.PrinterException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Tweetie Pie
 */
public class StaffReportsScreen extends javax.swing.JFrame {

    /**
     * Creates new form CustomerReportsScreen
     */
    public StaffReportsScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        monthly = new javax.swing.JRadioButton();
        quarterly = new javax.swing.JRadioButton();
        yearly = new javax.swing.JRadioButton();
        custom = new javax.swing.JCheckBox();
        startDate = new javax.swing.JTextField();
        endDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("Username");

        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        monthly.setText(" Month");
        monthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyActionPerformed(evt);
            }
        });

        quarterly.setText(" Quarter");
        quarterly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quarterlyActionPerformed(evt);
            }
        });

        yearly.setText("Year");
        yearly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyActionPerformed(evt);
            }
        });

        custom.setText("Custom Range");
        custom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customActionPerformed(evt);
            }
        });

        startDate.setEditable(false);
        startDate.setText("Start date");
        startDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                startDateFocusGained(evt);
            }
        });

        endDate.setEditable(false);
        endDate.setText("End date");
        endDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                endDateFocusGained(evt);
            }
        });

        jLabel1.setText(" dd/mm/yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(custom, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(monthly)
                                        .addGap(18, 18, 18)
                                        .addComponent(quarterly)))
                                .addGap(17, 17, 17)
                                .addComponent(yearly))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(startDate)
                                    .addComponent(endDate))
                                .addGap(51, 51, 51)
                                .addComponent(jLabel1)))))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthly)
                    .addComponent(quarterly)
                    .addComponent(yearly))
                .addGap(18, 18, 18)
                .addComponent(custom)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void monthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyActionPerformed
        // TODO add your handling code here:
        if (yearly.isSelected()){
            yearly.setSelected(false);
        }
        if (quarterly.isSelected()){
            quarterly.setSelected(false);
        }
    }//GEN-LAST:event_monthlyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(monthly.isSelected()){
            
            LocalDateTime  now = LocalDateTime.now();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
            String currentDate = dtf.format(now);
            String currentMonth = currentDate.substring(3, 5);
            String currentYear = currentDate.substring(6, 10);
            String sDate = "01/" + currentMonth +"/"+ currentYear;
           
            
            BAPREPT rp = new BAPREPT();
            try {
                rp.createMonthlyReport(sDate, currentDate);
            } catch (IOException ex) {
                Logger.getLogger(StaffReportsScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
               
            
        }
        
        if(quarterly.isSelected()){
            
            LocalDateTime  now = LocalDateTime.now();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
            String currentDate = dtf.format(now);
            String currentMonth = currentDate.substring(3, 5);
            String currentYear = currentDate.substring(6, 10);
            String sDate = new String();
            String quarter = new String();
            String q = new String();
            
            String [] firstQuarter = {"01", "02", "03"};
            String [] secondQuarter = {"04", "05", "06"};
            String [] thirdQuarter = {"07", "08", "09"};
            String [] fourthQuarter = {"10", "11", "12"};
            
            for(String date: firstQuarter){
                if(date.compareTo(currentMonth)==0){
                     sDate = "01/01/"+ currentYear;
                     quarter = "1st_Quarter";
                     q = "1st Quarter";
                }
            }
            
            for(String date: secondQuarter){
                if(date.compareTo(currentMonth)==0){
                     sDate = "01/04/"+ currentYear;
                     quarter = "2nd_Quarter";
                     q = "2nd Quarter";
                }
            }
            
            for(String date: thirdQuarter){
                if(date.compareTo(currentMonth)==0){
                     sDate = "01/07/"+ currentYear;
                     quarter = "3rd_Quarter";
                     q = "3rd Quarter";
                     
                }
            }
            
            for(String date: fourthQuarter){
                if(date.compareTo(currentMonth)==0){
                     sDate = "01/10/"+ currentYear;
                     quarter = "4th_Quarter";
                     q = "4th Quarter";
                }
            }
            
            BAPREPT rp = new BAPREPT();
            try {
                rp.createQuarterlyReport(sDate, currentDate,quarter,q);
            } catch (IOException ex) {
                Logger.getLogger(StaffReportsScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PrinterException ex) {
                Logger.getLogger(StaffReportsScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        if(yearly.isSelected()){
            LocalDateTime  now = LocalDateTime.now();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
            String currentDate = dtf.format(now);
            String currentYear = currentDate.substring(6, 10);
            String sDate = "01/01/" + currentYear;
            
            BAPREPT rp = new BAPREPT();
            try {
                rp.createYearlyReport(sDate, currentDate);
            } catch (IOException ex) {
                Logger.getLogger(StaffReportsScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PrinterException ex) {
                Logger.getLogger(StaffReportsScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
        
        if(custom.isSelected()){
              boolean date1 = false ;
              boolean date2 = false;
            
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                sdf.setLenient(false);
                
//                if (!startDate.getText().equals(sdf.format(date1)) | !endDate.getText().equals(sdf.format(date1))) {
//                     date1 = null;
//                     date2 = null;
//                }
                try {
                    sdf.parse(startDate.getText().trim());
                    date1 = true;
                } catch (ParseException pe) {
                     date1 = false;
                 }
                
                try {
                    sdf.parse(endDate.getText().trim());
                    date2 = true;
                } catch (ParseException pe) {
                     date1 = false;
                 }
                            

            
            if (date1 == false | date2 == false) {
                // Invalid date format
                 JOptionPane.showMessageDialog(this,"Please enter a valid date","Invalid Date Error",JOptionPane.ERROR_MESSAGE);
            } else {
                   BAPREPT rp = new BAPREPT();
                  try {
                      rp.createIndividualReport(startDate.getText(), endDate.getText());
                      JOptionPane.showMessageDialog(null, "Report Created in Reports Directory ","Backup successful.",JOptionPane.OK_OPTION);
                      this.dispose();
                  } catch (IOException ex) {
                      Logger.getLogger(StaffReportsScreen.class.getName()).log(Level.SEVERE, null, ex);
                  }
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void quarterlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quarterlyActionPerformed
            // TODO add your handling code here:
            if(monthly.isSelected()){
                monthly.setSelected(false);
            }
            
            if(yearly.isSelected()){
                yearly.setSelected(false);
            }
    }//GEN-LAST:event_quarterlyActionPerformed

    private void yearlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyActionPerformed
        // TODO add your handling code here:
        if(monthly.isSelected()){
            monthly.setSelected(false);
        }
        
        if(quarterly.isSelected()){
            quarterly.setSelected(false);
        }
    }//GEN-LAST:event_yearlyActionPerformed

    private void customActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customActionPerformed
        // TODO add your handling code here:
        
        if(custom.isSelected() == true){
            startDate.setEditable(true);
            endDate.setEditable(true);
            monthly.setSelected(false);
            quarterly.setSelected(false);
            yearly.setSelected(false);
        }
        
        
        else{
            
            startDate.setEditable(false);
            endDate.setEditable(false);
            
        }
    }//GEN-LAST:event_customActionPerformed

    private void startDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_startDateFocusGained
        // TODO add your handling code here:
        if (startDate.isEditable()){
             startDate.setText("");
        }
       
    }//GEN-LAST:event_startDateFocusGained

    private void endDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_endDateFocusGained
        // TODO add your handling code here:
        
        if(endDate.isEditable()){
         endDate.setText("");   
        }
        
    }//GEN-LAST:event_endDateFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffReportsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffReportsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffReportsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffReportsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffReportsScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox custom;
    private javax.swing.JTextField endDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton monthly;
    private javax.swing.JRadioButton quarterly;
    private javax.swing.JTextField startDate;
    private javax.swing.JRadioButton yearly;
    // End of variables declaration//GEN-END:variables
}
